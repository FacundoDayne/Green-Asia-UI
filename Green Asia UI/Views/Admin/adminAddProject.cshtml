@{
    Layout = null;
}

@model ProjectModel
<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
	<script type="text/javascript" src="https://www.bing.com/api/maps/mapcontrol?key=ApFkiZUGSuNuTphyHstPFnkvL0IGwOKelabezyQVt4RwYTD-yE5n5dMgmeHugQgN"></script>
    <meta charset="UTF-8">
    <title> Add Project </title>
    <link rel="stylesheet" href="~/css/addContractor.css" asp-append-version="true" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	<style>
		.field-validation-valid {
			display: none;
		}

		.validation-summary-valid {
			display: none;
		}

		table {
			width: 100%; /* Set the table width to 100% of the container */
		}

			table td {
				padding: 5px;
			}

		td.column2 {
			width: 50%; /* Set the second column to occupy 50% of the table's width */
			vertical-align: top; /* Align content to the top of the cell */
		}

		#map {
			height: 100%; /* Fit the image to the height of the four rows */
			width: 100%; /* Fit the image to the width of its container */
		}

		.datepicker {
			display: inline-block;
		}
	</style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>

	<br />
	<br />
	<br />
	<br />
    <div class="container">
		<a class="dashboard-link" asp-area="" asp-controller="Admin" asp-action="adminProjectDash">
            <div class="main-top">
                <i class="fas fa-user"></i>
            </div>
        </a>
        <div class="title">Add Project</div>
        <div class="content">
			@using (Html.BeginForm("CreateProject", "Admin", FormMethod.Post))
			{
				@Html.AntiForgeryToken()

				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div style="display: none">
					@Html.EditorFor(m=>m.BuildingList);
					@for (int x = 0; x < Model.BuildingList.Count; x++)
					{
						@Html.EditorFor(m=>m.BuildingList[x])
						@Html.EditorFor(m=>m.BuildingList[x].ID)
						@Html.EditorFor(m=>m.BuildingList[x].Description)
					}
					@Html.EditorFor(m=>m.EngineerList);
					@for (int x = 0; x < Model.EngineerList.Count; x++)
					{
						@Html.EditorFor(m=>m.EngineerList[x])
						@Html.EditorFor(m=>m.EngineerList[x].ID)
						@Html.EditorFor(m=>m.EngineerList[x].Description)
					}
				</div>

                <div class="user-details">
					<!--
                    <div class="input-box">
                        <span class="details">Project ID</span>
                        <input type="text" placeholder="Enter ID" required>
					</div>-->
                    <div class="input-box">
                        <span class="details">Project Title</span>
                        @Html.TextBoxFor(m=>m.Title)
					</div>
					<div class="input-box">
						<span class="details">Project Client</span>
						@Html.TextBoxFor(m=>m.ClientName)
					</div>
					<div class="input-box">
						<span class="details">Client Contact</span>
						@Html.TextBoxFor(m=>m.ClientContact)
					</div>
                    <div class="input-box">
						<span class="details">Contractor in charge</span>
						@Html.DropDownListFor(m => m.EngineerID, new SelectList(Model.EngineerList, "ID", "Description"), "Select a category")
                    </div>
                    <div class="input-box">
						<span class="details">Residential Type</span>
						@Html.DropDownListFor(m => m.BuildingID, new SelectList(Model.BuildingList, "ID", "Description"), "Select a category")
                    </div>
					<div class="input-box">
						<span class="details">Project Date</span>
						@Html.EditorFor(m=>m.Date, new { htmlAttributes = new { @class = "datepicker" } })
					</div>
                    <div class="input-box">
						<span class="details">Address</span>
						@Html.TextBoxFor(m=>m.Address, new { @class = "form-control", @id="address"  })
                    </div>
                    <div class="input-box">
						<span class="details">City</span>
						@Html.TextBoxFor(m=>m.City, new { @class = "form-control", @id="city"  })
                    </div>
                    <div class="input-box">
						<span class="details">Region</span>
						@Html.TextBoxFor(m=>m.Region, new { @class = "form-control" , @id="AdminDistrict" })
                    </div>
                    <div class="input-box">
						<span class="details">Country</span>
						@Html.TextBoxFor(m=>m.Country, new { @class = "form-control", @id="Country" })
                    </div>
				</div>
				<div>
					<div class="map" id="myMap" style="position:relative;width:100%;height:600px;"></div>
				</div>
				<div class="title">Project Details</div>
				<div class="user-details">
                    <div class="input-box">
						<span class="details">Number of Storeys</span>
						@Html.TextBoxFor(m => m.NumberOfStoreys, new { @class = "form-control" })
					</div>
					<div class="input-box">
						<span class="details">Floor height</span>
						@Html.TextBoxFor(m => m.FloorHeight, new { @class = "form-control" })
					</div>
                    <div class="input-box">
						<span class="details">Building width</span>
						@Html.TextBoxFor(m => m.BuildingLength, new { @class = "form-control" })
					</div>
					<div class="input-box">
						<span class="details">Building length</span>
						@Html.TextBoxFor(m => m.BuildingWidth, new { @class = "form-control" })
					</div>
                </div>
                <div class="button">
                    <input type="submit" value="Submit Project">
                </div>
            }
        </div>
    </div>
	<link href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet">
	<script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script>
		$(function () {
			$(".datepicker").datepicker();
		});
		function loadMapScenario() {
			var map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
				credentials: 'ApFkiZUGSuNuTphyHstPFnkvL0IGwOKelabezyQVt4RwYTD-yE5n5dMgmeHugQgN',
				center: new Microsoft.Maps.Location(14.552120, 121.056068), // Initial location (latitude, longitude)
				zoom: 12 // Initial zoom level

			});
			Microsoft.Maps.Events.addHandler(map, 'click', function (e) {
				var point = new Microsoft.Maps.Point(e.getX(), e.getY());
				var location = e.target.tryPixelToLocation(point);
				reverseGeocode(location);
			});
			function reverseGeocode(location) {
				var apiUrl = `https://dev.virtualearth.net/REST/v1/Locations/${location.latitude},${location.longitude}?key=ApFkiZUGSuNuTphyHstPFnkvL0IGwOKelabezyQVt4RwYTD-yE5n5dMgmeHugQgN`;

				fetch(apiUrl)
					.then(response => response.json())
					.then(data => {
						if (data.resourceSets.length > 0 && data.resourceSets[0].resources.length > 0) {
							var address = data.resourceSets[0].resources[0].address.formattedAddress;

							document.getElementById('address').value = data.resourceSets[0].resources[0].address.addressLine;
							document.getElementById('city').value = data.resourceSets[0].resources[0].address.locality;
							document.getElementById('AdminDistrict').value = data.resourceSets[0].resources[0].address.adminDistrict;
							document.getElementById('Country').value = data.resourceSets[0].resources[0].address.countryRegion;
							document.getElementById('longtitude').value = location.longitude;
							document.getElementById('latitude').value = location.latitude;

							map.entities.removeAt(0);
							var pushpin = new Microsoft.Maps.Pushpin(location);
							map.entities.push(pushpin);
						}
					})
					.catch(error => {
						console.error('Error:', error);
					});
			}
		}
		const body = document.querySelector('body');
		body.onload = loadMapScenario;
	</script>
	<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
</body>
</html>