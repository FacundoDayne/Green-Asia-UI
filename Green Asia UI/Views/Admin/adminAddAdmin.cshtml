@{
    Layout = null;
}
@model AddEmployeeModel

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
	<style>
		.field-validation-valid {
			display: none;
		}

		.validation-summary-valid {
			display: none;
		}
	</style>
    <meta charset="UTF-8">
    <title> Add Admin </title>
	<link rel="stylesheet" href="~/css/newAdminAddContractor.css" asp-append-version="true" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>

    <div class="container">
		<a class="dashboard-link" asp-area="" asp-controller="Admin" asp-action="adminAdminDash">
            <div class="main-top">
                <i class="fas fa-user"></i>
            </div>
        </a>
        <div class="title">Add Admin</div>
        <div class="content">
			@using (Html.BeginForm("adminAddAdmin", "Admin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
			{
				<div class="user-details">
					@Html.AntiForgeryToken()

					<div class="input-box">
						@Html.ValidationSummary()
					</div>

					<div class="input-box">
					</div>
					<div hidden>
						<div class="input-box">
							@Html.LabelFor(m => m.Role, new { @class = "details" })
							<div class="col-md-10">
								@Html.DropDownListFor(m => m.Role, new SelectList(Model.roles, "id", "name"), "Select User Role", new { @class="dropdown" })
								@Html.ValidationMessageFor(m => m.Role, "Choose User Role", new { @class = "text-danger" })
							</div>
						</div>
					
						<div class="input-box">
						</div>
					</div>
					<div class="input-box">
						@Html.LabelFor(m => m.FirstName, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.FirstName, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.FirstName, "Enter a name", new { @class = "text-danger" })
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.MiddleName, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.MiddleName, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.MiddleName, "Enter a name", new { @class = "text-danger" })
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.LastName, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.LastName, new { @class = "text-input", @id = "lastname_input", @oninput="handleinput()" })
							@Html.ValidationMessageFor(m => m.LastName, "Enter a name", new { @class = "text-danger" })
						</div>
					</div>

					<div class="input-box">
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.Username, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.Username, new { @class = "text-input", @id = "username_input", @readonly = "true" })
							@Html.ValidationMessageFor(m => m.Username, "Enter a Username", new { @class = "" })
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.Password, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.Password, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.Password, "Enter a Password", new { @class = "text-danger" })
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.Contact, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.Contact, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.Contact)
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.Email, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.Email, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.Email )
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.Address, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.Address, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.Address, "Enter an address", new { @class = "text-danger" })
						</div>
					</div>

					<div class="input-box">
						@Html.LabelFor(m => m.City, new { @class = "details" })
						<div class="col-md-10">
							@Html.TextBoxFor(m => m.City, new { @class = "text-input" })
							@Html.ValidationMessageFor(m => m.City, "Enter a city", new { @class = "text-danger" })
						</div>
					</div>

					<div class="button">
							<input type="submit" value="Submit" />
					</div>
            
				</div>
			}
		</div>
		<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
		<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
		<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
		<script type="text/javascript">
			var typingTimer;
			var doneTypingInterval = 1000;
			var nuts = 'nuts';
			function handleinput(){
				console.log("A");
				clearTimeout(typingTimer);
				typingTimer = setTimeout(makeAjaxRequest, doneTypingInterval);
			}

			function makeAjaxRequest() {
				console.log("B");
				var lastname = $('#lastname_input').val();
				if (lastname != "") {
					console.log("C");
					$.ajax({
						url: '/Employee/CheckUsernameExisting?param1=' + nuts,
						method: 'GET',
						data: { selectedValue: "" },
						success: function (data) {
							$(`#username_input`).val(lastname + '.' + data);
						},
						error: function (error) {
							console.error(error);
						}
					});
				}
			}
		</script>

	</body>
</html>