@model MCEAddSubitemModel

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<head>
	<style>
		.field-validation-valid {
			display: none;
		}

		.validation-summary-valid {
			display: none;
		}
	</style>
	<script>
		const quantityBox = document.getElementById("quantityBox");
		const rateBox = document.getElementById("rateBox");
		const amountBox = document.getElementById("amountBox");

		quantityBox.addEventListener("input", updateAmount);
		rateBox.addEventListener("input", updateAmount);

		function updateAmount()
		{
			const quantity = parseFloat(quantityBox.value) || 0;
			const rate = parseFloat(rateBox.value) || 0;

			const amount = (quantity * rate).toFixed(2);

			amountBox.value = amount;
		}
	</script>
</head>
<body>
	<h3>Add Item</h3>
	<main class="inputGrid">

		@using (Html.BeginForm("MCEAddSubitem", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
		{
			@Html.AntiForgeryToken()

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })

			<div class="form-group">
				@Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Description, "Enter item name", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.UoM, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.UoM, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.UoM, "Enter unit of measurement", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.Quantity, new { @class = "col-md-2 control-label", @id="quantityBox"})
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.Quantity, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Quantity, "Enter quantity", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.UnitRate, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.UnitRate, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.UnitRate, "Enter unit rate", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.MarkUp, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.MarkUp, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.MarkUp, "Enter unit marked up rate", new { @class = "text-danger", @id="rateBox"})
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.Amount, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.Amount, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Amount, "Enter total amount", new { @class = "text-danger", @id="totalBox" })
				</div>
			</div>

			<input type="submit" value="Submit" class="button button2" />
		}

	</main>
	<br>
	<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

</body>