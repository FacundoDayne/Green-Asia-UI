@model AddMaterialModel

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<head>
	<style>
		.field-validation-valid {
			display: none;
		}

		.validation-summary-valid {
			display: none;
		}
	</style>
</head>
<body>
    <h3>Add Product</h3>
    <main class="inputGrid">

		@using (Html.BeginForm("AddProduct", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
		{
			@Html.AntiForgeryToken()

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })

			<div class="form-group">
				@Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Description, "Enter a description", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.Description_Long, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextAreaFor(m => m.Description_Long, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Description_Long, "Enter a description", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.CategoryID, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.DropDownListFor(m => m.CategoryID, new SelectList(Model.CategoryList, "ID", "Description"), "Select a category")
					@Html.ValidationMessageFor(m => m.CategoryID, "Choose a category", new { @class = "text-danger"})
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.MeasurementType, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.DropDownListFor(m => m.MeasurementType, new SelectList(Model.MeasurementTypeList, "ID", "Description"), "Select a Manufacturer")
					@Html.ValidationMessageFor(m => m.MeasurementType, "Choose a measurment type", new { @class = "text-danger"})
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.MeasurementID, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.DropDownListFor(m => m.MeasurementID, new SelectList(Model.MeasurementUnitList, "ID", "Description"), "Select a Measurement Unit")
					@Html.ValidationMessageFor(m => m.MeasurementID, "Choose a unit of measurment", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(m => m.MeasurementValue, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.MeasurementValue, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.MeasurementValue, "Must be a number", new { @class = "text-danger" })
				</div>
			</div>

			<button class="button button1">Reset</button>
			<input type="submit" value="Submit" class="button button2" />
		}
    </main><br>
	<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
</body>