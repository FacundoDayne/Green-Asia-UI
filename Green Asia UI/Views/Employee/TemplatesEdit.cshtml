@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	Layout = null;
}
@model EditTemplateModel
<head>
	<style>
		.field-validation-valid {
			display: none;
		}

		.validation-summary-valid {
			display: none;
		}
	</style>
	<meta charset="UTF-8">
	<title> Edit Template </title>
	<link rel="stylesheet" href="~/css/newAdminAddContractor.css" asp-append-version="true" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<body>
	<div class="container">
		<a class="dashboard-link" asp-area="" asp-controller="Employee" asp-action="Templates">
			<div class="main-top">
				<i class="fas fa-user"></i>
			</div>
		</a>
		<div class="title">Add Template</div>
		<div class="content">
			@using (Html.BeginForm("TemplatesEdit", "Employee", FormMethod.Post))
			{
				@Html.AntiForgeryToken()


				<div style="display: none">
					@Html.DisplayFor(m=>m.materials)
				</div>

				<h4>Template Name</h4>
				<div class="input-box">
					@Html.LabelFor(m=>m.Descritpion, new { @class = "details" })
					<div>
						@Html.TextBoxFor(m=>m.Descritpion, new { @class = "text-input" })
						@Html.ValidationMessageFor(m=>m.Descritpion, "Enter template title", new { @class = "text-danger" })
					</div>
				</div>
				<div class="input-box">
					@Html.LabelFor(m=>m.Long_Description, new { @class = "details" })
					<div>
						@Html.TextBoxFor(m=>m.Long_Description, new { @class = "text-input" })
						@Html.ValidationMessageFor(m=>m.Long_Description, "Enter template description", new { @class = "text-danger" })
					</div>
				</div>

				<h2 hidden>Template Building Specifications</h2>
				<table hidden>
					<tbody>
						<tr>
							<td>
							<td>@Html.LabelFor(m=>m.NumberOfStoreys, new { @class = "details" })</td>
							</td>
							<td>
								@Html.TextBoxFor(m=>m.NumberOfStoreys, new { @class = "text-input" })
								@Html.ValidationMessageFor(m=>m.NumberOfStoreys, "Enter constant", new { @class = "text-danger" })
							</td>
						</tr>
						<tr>
							<td>
							<td>@Html.LabelFor(m=>m.FloorHeight, new { @class = "details" })</td>
							</td>
							<td>
								@Html.TextBoxFor(m=>m.FloorHeight, new { @class = "text-input" })
								@Html.ValidationMessageFor(m=>m.FloorHeight, "Enter constant", new { @class = "text-danger" })
							</td>
						</tr>
						<tr>
							<td>
							<td>@Html.LabelFor(m=>m.BuildingWidth, new { @class = "details" })</td>
							</td>
							<td>
								@Html.TextBoxFor(m=>m.BuildingWidth, new { @class = "text-input" })
								@Html.ValidationMessageFor(m=>m.BuildingWidth, "Enter constant", new { @class = "text-danger" })
							</td>
						</tr>
						<tr>
							<td>
							<td>@Html.LabelFor(m=>m.BuildingLength, new { @class = "details" })</td>
							</td>
							<td>
								@Html.TextBoxFor(m=>m.BuildingLength, new { @class = "text-input" })
								@Html.ValidationMessageFor(m=>m.BuildingLength, "Enter constant", new { @class = "text-danger" })
							</td>
						</tr>
					</tbody>
				</table>

				<h4>Building Materials</h4>
				<table>
					<thead>
						<tr>
							<th>Material</th>
							<th></th>
							<th colspan="3"></th>
						</tr>
					</thead>
					<tbody>

						@for (int x = 0; x < Model.materials.Count; x++)
						{
							@Html.HiddenFor(m=>m.materials[x].ID)
							@Html.HiddenFor(m=>m.materials[x].ID_Template)
							@Html.HiddenFor(m=>m.materials[x].Name)
							<tr>
								<td>@Model.materials[x].Name</td>
								<td>@Html.CheckBoxFor(m=>m.materials[x].Checked)</td>
								<td></td>
							</tr>
						}
					</tbody>
				</table>

				<h4>Template Formula Constants</h4>
				<table>
					<thead>
						<tr>
							<th>Variable Name</th>
							<th>Value</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<div class="input-box">
							<td>@Html.LabelFor(m=>m.floorThickness, new { @class = "details" })</td>
							<td>
									@Html.TextBoxFor(m=>m.floorThickness, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.floorThickness, "Enter constant", new { @class = "text-danger" })
							</td>
			</div>
			</tr>
			<tr>
				<div class="input-box">
				<td>@Html.LabelFor(m=>m.wallThickness, new { @class = "details" })</td>
				<td>
									@Html.TextBoxFor(m=>m.wallThickness, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.wallThickness, "Enter constant", new { @class = "text-danger" })
				</td>
		</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.rebarDiameter, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.rebarDiameter, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.rebarDiameter, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.nailConstant, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.nailConstant, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.nailConstant, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.hollowBlockConstant, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.hollowBlockConstant, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.hollowBlockConstant, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.supportBeamLength, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.supportBeamLength, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.supportBeamLength, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.supportBeamWidth, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.supportBeamWidth, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.supportBeamWidth, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.supportBeamSpace, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.supportBeamSpace, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.supportBeamSpace, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.concreteRatioCement, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.concreteRatioCement, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.concreteRatioCement, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.concreteRatioSand, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.concreteRatioSand, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.concreteRatioSand, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.concreteRatioAggregate, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.concreteRatioAggregate, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.concreteRatioAggregate, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.plywoodLength, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.plywoodLength, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.plywoodLength, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.plywoodWidth, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.plywoodWidth, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.plywoodWidth, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.riserHeight, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.riserHeight, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.riserHeight, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.threadDepth, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.threadDepth, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.threadDepth, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.stairsWidth, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.stairsWidth, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.stairsWidth, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.wasteage, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.wasteage, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.wasteage, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		<tr>
			<div class="input-box">
			<td>@Html.LabelFor(m=>m.provisions, new { @class = "details" })</td>
			<td>
									@Html.TextBoxFor(m=>m.provisions, new { @class = "text-input" })
									@Html.ValidationMessageFor(m=>m.provisions, "Enter constant", new { @class = "text-danger" })
			</td>
			</div>
		</tr>
		</tbody>
		</table>
		<input type="submit" value="Submit" class="button button2" />
			}
	</div>

	<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
</body>